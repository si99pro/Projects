{"version":3,"file":"static/js/820.33a228f3.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/Card/cardClasses.js","../node_modules/@mui/material/esm/Card/Card.js","../node_modules/@mui/icons-material/esm/ErrorOutline.js","pages/Dashboard.js","../node_modules/@mui/material/esm/styles/cssUtils.js","../node_modules/@mui/material/esm/Skeleton/skeletonClasses.js","../node_modules/@mui/material/esm/Skeleton/Skeleton.js","../node_modules/@mui/material/esm/CardContent/cardContentClasses.js","../node_modules/@mui/material/esm/CardContent/CardContent.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2M12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}), 'ErrorOutline');","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, Suspense, lazy } from 'react';\r\nimport { auth, db } from '../firebase';\r\nimport { doc, getDoc, updateDoc } from 'firebase/firestore';\r\nimport styled from '@emotion/styled';\r\nimport {\r\n    Container, // Keep Container import for the styled component derivation\r\n    Typography,\r\n    Grid,\r\n    Paper,\r\n    Avatar,\r\n    Modal,\r\n    Box,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    IconButton,\r\n    Skeleton,\r\n    Alert,\r\n    Link as MuiLink,\r\n} from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\n\r\n// Lazy load the component for better performance\r\nconst AllMomentList = lazy(() => import('../components/AllMomentList'));\r\n\r\n// --- Styled Components ---\r\nconst primaryColor = '#3f51b5'; // Example primary color\r\nconst secondaryColor = '#7986cb'; // Example secondary color\r\nconst textColor = '#212121'; // Dark text color\r\nconst subtleBgColor = '#ffffff'; // Example background - may need adjustment\r\n\r\n// StyledContainer: Derived from Container, applies some default styling.\r\n// We will *not* pass maxWidth to it in the JSX anymore.\r\nconst StyledContainer = styled(Container)`\r\n    margin-top: 20px;\r\n    margin-bottom: 40px;\r\n    /* Removed fixed padding-left/right - let MainLayout handle overall padding */\r\n    color: ${textColor};\r\n    font-family: 'Roboto', sans-serif;\r\n    /* Optional: Remove if MainLayout bg is sufficient */\r\n    /* background-color: ${subtleBgColor}; */\r\n    display: block;\r\n`;\r\n\r\n// Base styling for Paper elements (cards)\r\nconst StyledPaperBase = styled(Paper)`\r\n    border-radius: 12px;\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.08);\r\n    background-color: #fff;\r\n    transition: box-shadow 0.3s ease-in-out;\r\n    &:hover {\r\n        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.12);\r\n    }\r\n`;\r\n\r\n// Specific card styles\r\nconst UserInfoContainer = styled(StyledPaperBase)`\r\n    padding: 24px;\r\n`;\r\n\r\nconst QuickLinksContainer = styled(StyledPaperBase)`\r\n    padding: 18px 24px;\r\n`;\r\n\r\n// Widget card for sidebar-like elements (e.g., Discussions)\r\nconst WidgetCard = styled(Card)`\r\n    border-radius: 12px;\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.08);\r\n    height: 100%; // Important for Grid layout\r\n    display: flex;\r\n    flex-direction: column;\r\n    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n    &:hover {\r\n       transform: translateY(-4px);\r\n       box-shadow: 0 6px 12px rgba(0,0,0,0.1);\r\n    }\r\n    width: 100%; // Ensure it takes full width of its Grid item\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst WidgetCardHeader = styled(CardContent)`\r\n    border-bottom: 1px solid #e0e0e0;\r\n    padding: 16px 20px;\r\n    background-color: #fafafa; // Slightly off-white header\r\n    flex-shrink: 0;\r\n`;\r\n\r\nconst WidgetCardContent = styled(CardContent)(({ theme }) => ({\r\n    paddingLeft: theme.spacing(2.5),\r\n    paddingRight: theme.spacing(2.5),\r\n    paddingTop: theme.spacing(2.5),\r\n    paddingBottom: theme.spacing(2.5),\r\n    flexGrow: 1, // Allow content to take remaining space\r\n    '&:last-child': { // Remove extra padding from MUI CardContent default\r\n         paddingBottom: theme.spacing(2.5),\r\n    },\r\n    overflowY: 'auto', // Make content scrollable if it overflows\r\n    minHeight: 0, // Necessary for flex-grow in some contexts\r\n}));\r\n\r\n// Section title styling\r\nconst SectionTitle = styled(Typography)`\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    margin-bottom: 16px;\r\n    color: ${primaryColor};\r\n`;\r\n\r\n// Container for horizontally scrollable quick links\r\nconst QuickLinksScroll = styled(Box)`\r\n    overflow-x: auto;\r\n    white-space: nowrap;\r\n    padding-bottom: 10px; // Space for scrollbar\r\n    margin-left: -8px; // Compensate for button margin\r\n    margin-right: -8px; // Compensate for button margin\r\n    // Custom scrollbar styles\r\n    &::-webkit-scrollbar { height: 6px; }\r\n    &::-webkit-scrollbar-thumb { background: #ccc; border-radius: 3px; }\r\n    &::-webkit-scrollbar-thumb:hover { background: #aaa; }\r\n    scrollbar-width: thin; // Firefox\r\n    scrollbar-color: #ccc transparent; // Firefox\r\n`;\r\n\r\n// Styling for individual quick link buttons\r\nconst QuickLinkButton = styled(Button)`\r\n    margin: 0 8px; // Space between buttons\r\n    text-transform: none; // Keep original casing\r\n    border-radius: 16px; // Pill shape\r\n    font-weight: 500;\r\n`;\r\n\r\n// User avatar styling\r\nconst ProfileAvatar = styled(Avatar)`\r\n    width: 80px;\r\n    height: 80px;\r\n    margin-right: 24px;\r\n    position: relative; // Needed for positioning the edit icon\r\n    background-color: ${props => props.profilebg || primaryColor}; // Dynamic background\r\n    color: white;\r\n    font-size: 2.5rem;\r\n    cursor: pointer;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n    flex-shrink: 0; // Prevent shrinking in flex layout\r\n    overflow: visible; // Allow absolutely positioned children (edit icon) to overflow\r\n`;\r\n\r\n// Flex container for avatar and user details\r\nconst WelcomeContainer = styled(Box)`\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: left;\r\n  width: 100%;\r\n`;\r\n\r\n// Edit icon positioned over the avatar\r\nconst EditIconContainer = styled(IconButton)`\r\n    position: absolute;\r\n    bottom: 0px;\r\n    right: 0px;\r\n    background-color: rgba(255, 255, 255, 0.95); // Semi-transparent white background\r\n    padding: 5px;\r\n    border: 1px solid rgba(0,0,0,0.1); // Subtle border\r\n    border-radius: 50%;\r\n    transition: background-color 0.2s ease, transform 0.2s ease;\r\n    z-index: 1; // Ensure it's on top of the avatar\r\n    &:hover {\r\n        background-color: white;\r\n        transform: scale(1.15); // Slight zoom on hover\r\n    }\r\n    svg { // Style the icon itself\r\n        font-size: 16px;\r\n        color: ${primaryColor};\r\n    }\r\n`;\r\n\r\n// Container for user text details next to avatar\r\nconst UserInfoDetails = styled(Box)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 4px; // Space between text lines\r\n    flex-grow: 1; // Take remaining horizontal space\r\n    min-width: 0; // Prevent overflow issues in flex layouts\r\n`;\r\n\r\n// Style for the content area of Modals\r\nconst modalStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: { xs: '90%', sm: 400 }, // Responsive width\r\n    bgcolor: 'background.paper',\r\n    border: 'none',\r\n    borderRadius: '12px', // Match card radius\r\n    boxShadow: 24, // MUI shadow depth\r\n    p: 4, // Padding inside modal\r\n};\r\n\r\n// --- Fallback Skeleton for Lazy Loaded Component ---\r\nconst AllMomentListSkeleton = () => (\r\n    <Box>\r\n        <Skeleton variant=\"text\" height={30} width=\"80%\" sx={{ mb: 1 }} />\r\n        <Skeleton variant=\"rectangular\" height={60} sx={{ mb: 2 }}/>\r\n        <Skeleton variant=\"text\" height={30} width=\"70%\" sx={{ mb: 1 }} />\r\n        <Skeleton variant=\"rectangular\" height={60} sx={{ mb: 2 }}/>\r\n        <Skeleton variant=\"text\" height={20} width=\"90%\" />\r\n    </Box>\r\n);\r\n\r\n// --- Dashboard Component ---\r\nfunction Dashboard() {\r\n    // --- State Variables ---\r\n    const [user, setUser] = useState(null); // Holds fetched user data from Firestore\r\n    const [loading, setLoading] = useState(true); // Tracks loading state\r\n    const [error, setError] = useState(null); // Holds error messages\r\n    const [openStatusModal, setOpenStatusModal] = useState(false); // Controls status update modal\r\n    const [currentStatus, setCurrentStatus] = useState(''); // Temp state for status dropdown\r\n    const [editProfileModalOpen, setEditProfileModalOpen] = useState(false); // Controls edit profile modal\r\n\r\n    // --- Fetch User Data Effect ---\r\n    useEffect(() => {\r\n        let isMounted = true; // Prevent state updates on unmounted component\r\n        setLoading(true);\r\n        setError(null);\r\n        const currentUser = auth.currentUser; // Get currently logged-in user\r\n\r\n        // If no user is logged in, stop loading and show error\r\n        if (!currentUser) {\r\n            if (isMounted) {\r\n                setError(\"User not authenticated. Please log in.\");\r\n                setLoading(false);\r\n            }\r\n            return; // Exit effect early\r\n        }\r\n\r\n        // Async function to fetch data from Firestore\r\n        async function fetchUserData() {\r\n            try {\r\n                const userDocRef = doc(db, 'users', currentUser.uid); // Reference to user's document\r\n                const docSnap = await getDoc(userDocRef); // Get the document snapshot\r\n\r\n                if (isMounted) { // Only update state if component is still mounted\r\n                    if (docSnap.exists()) {\r\n                        const userData = docSnap.data();\r\n                        setUser(userData); // Store user data in state\r\n                        // Initialize status dropdown with current value or empty string\r\n                        setCurrentStatus(userData.basicInfo?.currentStatus || '');\r\n                    } else {\r\n                        // Handle case where user is authenticated but has no Firestore doc yet\r\n                        console.warn('No user document found for UID:', currentUser.uid);\r\n                        setUser({}); // Set empty user object to avoid errors accessing properties\r\n                        setError(\"Welcome! Please complete your profile information.\");\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                console.error('Error fetching user data:', err);\r\n                if (isMounted) {\r\n                    setError(\"Failed to load dashboard data. Please check connection.\");\r\n                }\r\n            } finally {\r\n                // Ensure loading is set to false regardless of success or error\r\n                if (isMounted) {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchUserData();\r\n\r\n        // Cleanup function for the effect\r\n        return () => { isMounted = false; };\r\n    }, []); // Run effect only once on component mount (empty dependency array)\r\n\r\n    // --- Handlers ---\r\n    const handleStatusChange = (event) => setCurrentStatus(event.target.value); // Update status dropdown state\r\n    const handleCloseStatusModal = () => setOpenStatusModal(false); // Close status modal\r\n    const handleOpenStatusModal = () => { // Open status modal and prefill value\r\n        setCurrentStatus(user?.basicInfo?.currentStatus || '');\r\n        setOpenStatusModal(true);\r\n    };\r\n    const handleCloseEditProfileModal = () => setEditProfileModalOpen(false); // Close edit modal\r\n    const handleOpenEditProfileModal = () => setEditProfileModalOpen(true); // Open edit modal\r\n\r\n    // Handle submitting the new status\r\n    const handleStatusSubmit = async () => {\r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser) {\r\n            setError(\"Authentication error. Please log in again.\");\r\n            return;\r\n        }\r\n        // Store original status for potential rollback on error\r\n        const originalStatus = user?.basicInfo?.currentStatus || '';\r\n        try {\r\n            setOpenStatusModal(false); // Close modal immediately\r\n            // Optimistically update local state for faster UI feedback\r\n            setUser((prevState) => ({\r\n                ...prevState,\r\n                basicInfo: { ...(prevState?.basicInfo || {}), currentStatus: currentStatus },\r\n            }));\r\n            // Update Firestore document\r\n            const userDocRef = doc(db, 'users', currentUser.uid);\r\n            await updateDoc(userDocRef, { 'basicInfo.currentStatus': currentStatus });\r\n            console.log(\"Status updated successfully\");\r\n            // Optionally add a success snackbar here\r\n        } catch (error) {\r\n            console.error('Error updating current status:', error);\r\n            setError(\"Failed to update status. Please try again.\");\r\n            // Rollback local state if Firestore update fails\r\n            setUser((prevState) => ({\r\n                ...prevState,\r\n                basicInfo: { ...(prevState?.basicInfo || {}), currentStatus: originalStatus },\r\n            }));\r\n        }\r\n    };\r\n\r\n    // --- Derived State / Helper Variables ---\r\n    const basicInfo = user?.basicInfo || {}; // Safely access basicInfo, default to empty object\r\n    // Check if profile seems incomplete (user object exists but basicInfo is empty, ignore fetch errors)\r\n    const profileIncomplete = user && Object.keys(basicInfo).length === 0 && !error?.includes(\"Failed\");\r\n\r\n\r\n    // --- Render Logic ---\r\n\r\n    // Skeleton Loader Structure\r\n    const renderSkeletons = () => (\r\n        <Grid\r\n            container\r\n            spacing={3}\r\n            sx={{ display: 'flex', flexWrap: 'wrap', width: '100%' }}\r\n        >\r\n            {/* Left Column Skeleton */}\r\n            <Grid item xs={12} md={8} sx={{ display: 'flex', flexDirection: 'column' }}>\r\n                 <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3, flexGrow: 1 }}>\r\n                     <UserInfoContainer>\r\n                        <WelcomeContainer>\r\n                            <Skeleton variant=\"circular\" width={80} height={80} sx={{ mr: '24px', flexShrink: 0, overflow: 'visible' }} />\r\n                            <UserInfoDetails sx={{ flexGrow: 1, minWidth: 0 }}>\r\n                                <Skeleton height={40} width=\"60%\" sx={{ mb: 1}}/>\r\n                                <Skeleton height={20} width=\"80%\" />\r\n                                <Skeleton height={20} width=\"90%\" />\r\n                            </UserInfoDetails>\r\n                        </WelcomeContainer>\r\n                    </UserInfoContainer>\r\n                    <QuickLinksContainer>\r\n                        <Skeleton height={30} width={120} sx={{ mb: 2 }}/>\r\n                        <QuickLinksScroll>\r\n                            <Skeleton variant=\"rounded\" width={140} height={36} sx={{ m: '0 8px', display: 'inline-block', borderRadius: '16px' }} />\r\n                            <Skeleton variant=\"rounded\" width={120} height={36} sx={{ m: '0 8px', display: 'inline-block', borderRadius: '16px' }} />\r\n                            <Skeleton variant=\"rounded\" width={90} height={36} sx={{ m: '0 8px', display: 'inline-block', borderRadius: '16px' }} />\r\n                            <Skeleton variant=\"rounded\" width={160} height={36} sx={{ m: '0 8px', display: 'inline-block', borderRadius: '16px' }} />\r\n                        </QuickLinksScroll>\r\n                    </QuickLinksContainer>\r\n                 </Box>\r\n            </Grid>\r\n            {/* Right Column Skeleton */}\r\n            <Grid item xs={12} md={4} sx={{ display: 'flex' }}>\r\n                <WidgetCard sx={{ flexGrow: 1 }}>\r\n                    <WidgetCardHeader><Skeleton height={30} width=\"60%\" /></WidgetCardHeader>\r\n                    <WidgetCardContent>\r\n                        <AllMomentListSkeleton /> {/* Use the specific skeleton */}\r\n                    </WidgetCardContent>\r\n                </WidgetCard>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n\r\n    // Actual Content Renderer\r\n    const renderContent = () => (\r\n        <Grid\r\n            container\r\n            spacing={3} // Adds space BETWEEN Grid items\r\n            sx={{ display: 'flex', flexWrap: 'wrap', width: '100%' }} // Grid takes full available width\r\n        >\r\n            {/* --- Left Column (Main Content) --- */}\r\n            <Grid item xs={12} md={8} sx={{ display: 'flex', flexDirection: 'column' }}>\r\n                 {/* Inner Box to manage spacing between cards in this column */}\r\n                 <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3, flexGrow: 1 }}>\r\n                    {/* User Info Card - Conditional rendering */}\r\n                    {profileIncomplete ? (\r\n                        <UserInfoContainer>\r\n                            <WelcomeContainer>\r\n                                <ProfileAvatar onClick={handleOpenEditProfileModal} aria-label=\"Complete your profile\">\r\n                                     <EditIconContainer\r\n                                        size=\"small\"\r\n                                        aria-label=\"Open edit profile modal\"\r\n                                        onClick={(e) => { e.stopPropagation(); handleOpenEditProfileModal(); }}\r\n                                     >\r\n                                         <EditIcon />\r\n                                     </EditIconContainer>\r\n                                     ? {/* Placeholder for incomplete profile */}\r\n                                </ProfileAvatar>\r\n                                <UserInfoDetails>\r\n                                    <Typography variant=\"h5\" component=\"h1\" gutterBottom>Welcome!</Typography>\r\n                                    <Typography variant=\"body1\" color=\"textSecondary\">Click the avatar to get started.</Typography>\r\n                                </UserInfoDetails>\r\n                            </WelcomeContainer>\r\n                        </UserInfoContainer>\r\n                    ) : (\r\n                        <UserInfoContainer>\r\n                            <WelcomeContainer>\r\n                                <ProfileAvatar\r\n                                    profilebg={basicInfo.profilebg || primaryColor}\r\n                                    onClick={handleOpenEditProfileModal}\r\n                                    aria-label={`Edit profile for ${basicInfo.fullName || 'User'}`}\r\n                                >\r\n                                    <EditIconContainer\r\n                                        size=\"small\"\r\n                                        aria-label=\"Open edit profile modal\"\r\n                                        onClick={(e) => { e.stopPropagation(); handleOpenEditProfileModal(); }}\r\n                                    >\r\n                                        <EditIcon />\r\n                                    </EditIconContainer>\r\n                                    {/* Display first initial or fallback */}\r\n                                    {basicInfo.fullName?.charAt(0).toUpperCase() || '?'}\r\n                                </ProfileAvatar>\r\n                                <UserInfoDetails>\r\n                                    <Typography variant=\"h5\" component=\"h1\" fontWeight={600}>Welcome, {basicInfo.fullName || 'User'}!</Typography>\r\n                                    <Typography variant=\"body1\" color=\"textSecondary\" sx={{ mb: 0.5, overflowWrap: 'break-word' }}>{basicInfo.email || 'No email found'}</Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                        <strong>ID:</strong> {basicInfo.studentId || 'N/A'} | <strong>Session:</strong> {basicInfo.session || 'N/A'}\r\n                                    </Typography>\r\n                                    {basicInfo.currentStatus && (\r\n                                        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontStyle: 'italic', mt: 0.5 }}>\r\n                                            Status: {basicInfo.currentStatus}\r\n                                        </Typography>\r\n                                    )}\r\n                                </UserInfoDetails>\r\n                            </WelcomeContainer>\r\n                        </UserInfoContainer>\r\n                    )}\r\n\r\n                    {/* Quick Links Area */}\r\n                    <QuickLinksContainer>\r\n                        <SectionTitle variant=\"h6\">Quick Links</SectionTitle>\r\n                        <QuickLinksScroll>\r\n                            {/* Example Links - replace href with actual paths or use routing Links */}\r\n                            <QuickLinkButton variant=\"outlined\" color=\"primary\" component={MuiLink} href=\"#\">Course Catalog</QuickLinkButton>\r\n                            <QuickLinkButton variant=\"outlined\" color=\"primary\" component={MuiLink} href=\"#\" >Assignments</QuickLinkButton>\r\n                            <QuickLinkButton variant=\"outlined\" color=\"primary\" component={MuiLink} href=\"#\" >Grades</QuickLinkButton>\r\n                            <QuickLinkButton variant=\"outlined\" color=\"primary\" component={MuiLink} href=\"#\" >Campus Map</QuickLinkButton>\r\n                            <QuickLinkButton variant=\"contained\" color=\"secondary\" onClick={handleOpenStatusModal} sx={{ borderRadius: '16px' }}>\r\n                                Update Status\r\n                            </QuickLinkButton>\r\n                        </QuickLinksScroll>\r\n                    </QuickLinksContainer>\r\n                 </Box> {/* End of inner Box for left column */}\r\n            </Grid> {/* End of Left Column Grid item */}\r\n\r\n            {/* --- Right Column (Discussions Widget) --- */}\r\n            <Grid item xs={12} md={4} sx={{ display: 'flex' }}>\r\n                {/* WidgetCard fills the height of the Grid item */}\r\n                <WidgetCard sx={{ flexGrow: 1 }}>\r\n                    <WidgetCardHeader>\r\n                        <Typography variant=\"h6\" component=\"div\" fontWeight={500}>Latest Discussions</Typography>\r\n                    </WidgetCardHeader>\r\n                    <WidgetCardContent>\r\n                        {/* Lazy load the discussion list */}\r\n                        <Suspense fallback={<AllMomentListSkeleton />}>\r\n                            <AllMomentList />\r\n                        </Suspense>\r\n                    </WidgetCardContent>\r\n                </WidgetCard>\r\n            </Grid> {/* End of Right Column Grid item */}\r\n        </Grid> // End of Main Grid container\r\n    );\r\n\r\n\r\n    // --- Main Return ---\r\n    return (\r\n        // Use a React Fragment or simple Box as the top-level element now\r\n        <>\r\n            {/* Removed the `maxWidth` prop that was limiting the container's width */}\r\n            <StyledContainer> {/* You can potentially remove this StyledContainer entirely if not needed */}\r\n\r\n                {/* Display Error Alert if there's an error */}\r\n                {!loading && error && (\r\n                    <Alert\r\n                        severity={profileIncomplete ? \"info\" : \"error\"} // Show info styling for incomplete profile prompt\r\n                        icon={profileIncomplete ? <EditIcon fontSize=\"inherit\" /> : <ErrorOutlineIcon fontSize=\"inherit\" />}\r\n                        sx={{ mb: 3 }} // Margin bottom for spacing\r\n                    >\r\n                        {error}\r\n                    </Alert>\r\n                )}\r\n\r\n                {/* Show Skeletons while loading */}\r\n                {loading && renderSkeletons()}\r\n                {/* Show actual content when loading is done and user data exists */}\r\n                {!loading && user && renderContent()}\r\n                {/* Handle case where loading is done but user data is missing (and no specific error shown) */}\r\n                {!loading && !user && !error && (\r\n                    <Alert severity=\"warning\" sx={{ mt: 3 }}>Could not retrieve user session. Please try logging in again.</Alert>\r\n                )}\r\n\r\n            </StyledContainer>\r\n\r\n            {/* --- Modals --- */}\r\n            {/* Edit Profile Modal */}\r\n            <Modal open={editProfileModalOpen} onClose={handleCloseEditProfileModal} aria-labelledby=\"edit-profile-modal-title\">\r\n                <Box sx={modalStyle}>\r\n                    <Typography id=\"edit-profile-modal-title\" variant=\"h6\" component=\"h2\" gutterBottom>Edit Profile</Typography>\r\n                    <Typography sx={{ mt: 2 }}>\r\n                        Profile editing functionality (e.g., picture upload) will be implemented here.\r\n                    </Typography>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 1, mt: 3 }}>\r\n                        <Button onClick={handleCloseEditProfileModal}>Cancel</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" disabled>Save Changes</Button> {/* Placeholder */}\r\n                    </Box>\r\n                </Box>\r\n            </Modal>\r\n\r\n            {/* Update Status Modal */}\r\n            <Modal open={openStatusModal} onClose={handleCloseStatusModal} aria-labelledby=\"current-status-modal-title\">\r\n                <Box sx={modalStyle}>\r\n                    <Typography id=\"current-status-modal-title\" variant=\"h6\" component=\"h2\" gutterBottom>Update Current Status</Typography>\r\n                    <FormControl fullWidth margin=\"normal\">\r\n                        <InputLabel id=\"current-status-label\">Current Status</InputLabel>\r\n                        <Select\r\n                            labelId=\"current-status-label\"\r\n                            value={currentStatus}\r\n                            label=\"Current Status\"\r\n                            onChange={handleStatusChange}\r\n                        >\r\n                            <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                            <MenuItem value=\"Studying\">Studying</MenuItem>\r\n                            <MenuItem value=\"Graduated\">Graduated</MenuItem>\r\n                            <MenuItem value=\"Employed\">Employed</MenuItem>\r\n                            <MenuItem value=\"Seeking Opportunity\">Seeking Opportunity</MenuItem>\r\n                            <MenuItem value=\"Overseas\">Overseas</MenuItem>\r\n                            <MenuItem value=\"Unemployed\">Unemployed</MenuItem>\r\n                            {/* Add other relevant statuses */}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 1, mt: 3 }}>\r\n                        <Button onClick={handleCloseStatusModal}>Cancel</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleStatusSubmit}>Submit</Button>\r\n                    </Box>\r\n                </Box>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","'use client';\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from \"../styles/index.js\";\nimport { keyframes, css, styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getSkeletonUtilityClass } from \"./skeletonClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`;\nconst waveKeyframe = keyframes`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`;\n\n// This implementation is for supporting both Styled-components v4+ and Pigment CSS.\n// A global animation has to be created here for Styled-components v4+ (https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#12).\n// which can be done by checking typeof indeterminate1Keyframe !== 'string' (at runtime, Pigment CSS transform keyframes`` to a string).\nconst pulseAnimation = typeof pulseKeyframe !== 'string' ? css`\n        animation: ${pulseKeyframe} 2s ease-in-out 0.5s infinite;\n      ` : null;\nconst waveAnimation = typeof waveKeyframe !== 'string' ? css`\n        &::after {\n          animation: ${waveKeyframe} 2s linear 0.5s infinite;\n        }\n      ` : null;\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return {\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em',\n    variants: [{\n      props: {\n        variant: 'text'\n      },\n      style: {\n        marginTop: 0,\n        marginBottom: 0,\n        height: 'auto',\n        transformOrigin: '0 55%',\n        transform: 'scale(1, 0.60)',\n        borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n        '&:empty:before': {\n          content: '\"\\\\00a0\"'\n        }\n      }\n    }, {\n      props: {\n        variant: 'circular'\n      },\n      style: {\n        borderRadius: '50%'\n      }\n    }, {\n      props: {\n        variant: 'rounded'\n      },\n      style: {\n        borderRadius: (theme.vars || theme).shape.borderRadius\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.hasChildren,\n      style: {\n        '& > *': {\n          visibility: 'hidden'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.hasChildren && !ownerState.width,\n      style: {\n        maxWidth: 'fit-content'\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.hasChildren && !ownerState.height,\n      style: {\n        height: 'auto'\n      }\n    }, {\n      props: {\n        animation: 'pulse'\n      },\n      style: pulseAnimation || {\n        animation: `${pulseKeyframe} 2s ease-in-out 0.5s infinite`\n      }\n    }, {\n      props: {\n        animation: 'wave'\n      },\n      style: {\n        position: 'relative',\n        overflow: 'hidden',\n        /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n        WebkitMaskImage: '-webkit-radial-gradient(white, black)',\n        '&::after': {\n          background: `linear-gradient(\n                90deg,\n                transparent,\n                ${(theme.vars || theme).palette.action.hover},\n                transparent\n              )`,\n          content: '\"\"',\n          position: 'absolute',\n          transform: 'translateX(-100%)' /* Avoid flash during server-side hydration */,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          top: 0\n        }\n      }\n    }, {\n      props: {\n        animation: 'wave'\n      },\n      style: waveAnimation || {\n        '&::after': {\n          animation: `${waveKeyframe} 2s linear 0.5s infinite`\n        }\n      }\n    }]\n  };\n}));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n    animation = 'pulse',\n    className,\n    component = 'span',\n    height,\n    style,\n    variant = 'text',\n    width,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, {\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ...other,\n    style: {\n      width,\n      height,\n      ...style\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","ownerState","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","createSvgIcon","d","AllMomentList","lazy","primaryColor","StyledContainer","Container","StyledPaperBase","UserInfoContainer","QuickLinksContainer","WidgetCard","Card","WidgetCardHeader","CardContent","WidgetCardContent","_ref","theme","paddingLeft","spacing","paddingRight","paddingTop","paddingBottom","flexGrow","overflowY","minHeight","SectionTitle","Typography","QuickLinksScroll","Box","QuickLinkButton","Button","ProfileAvatar","Avatar","profilebg","WelcomeContainer","EditIconContainer","IconButton","UserInfoDetails","modalStyle","position","top","left","transform","width","xs","sm","bgcolor","border","borderRadius","boxShadow","p","AllMomentListSkeleton","_jsxs","children","Skeleton","variant","height","sx","mb","user","setUser","useState","loading","setLoading","error","setError","openStatusModal","setOpenStatusModal","currentStatus","setCurrentStatus","editProfileModalOpen","setEditProfileModalOpen","useEffect","isMounted","currentUser","auth","async","userDocRef","doc","db","uid","docSnap","getDoc","exists","_userData$basicInfo","userData","data","basicInfo","console","warn","err","fetchUserData","handleCloseStatusModal","handleOpenStatusModal","_user$basicInfo","handleCloseEditProfileModal","handleOpenEditProfileModal","profileIncomplete","Object","keys","length","includes","_Fragment","Alert","severity","icon","EditIcon","fontSize","ErrorOutlineIcon","Grid","container","display","flexWrap","item","md","flexDirection","gap","mr","flexShrink","minWidth","m","renderContent","_basicInfo$fullName","onClick","size","e","stopPropagation","component","gutterBottom","color","fullName","charAt","toUpperCase","fontWeight","overflowWrap","email","studentId","session","fontStyle","mt","MuiLink","href","Suspense","fallback","Modal","open","onClose","id","justifyContent","disabled","FormControl","fullWidth","margin","InputLabel","Select","labelId","value","label","onChange","event","target","MenuItem","_user$basicInfo2","originalStatus","prevState","updateDoc","log","getUnit","input","String","match","toUnitless","parseFloat","getSkeletonUtilityClass","pulseKeyframe","keyframes","waveKeyframe","pulseAnimation","css","waveAnimation","SkeletonRoot","animation","hasChildren","withChildren","fitContent","heightAuto","memoTheme","radiusUnit","shape","radiusValue","backgroundColor","vars","palette","bg","alpha","text","primary","mode","variants","style","marginTop","marginBottom","transformOrigin","Math","round","content","_ref2","visibility","_ref3","maxWidth","_ref4","WebkitMaskImage","background","action","hover","bottom","right","Boolean","slots","as","getCardContentUtilityClass","CardContentRoot","padding"],"sourceRoot":""}