{"version":3,"file":"static/js/346.b35491df.chunk.js","mappings":"oTA8BA,SAASA,EAAcC,GACnB,IACIC,EADAC,EAAO,EAGX,IAAKD,EAAI,EAAGA,EAAID,EAAOG,OAAQF,GAAK,EAClCC,EAAOF,EAAOI,WAAWH,KAAOC,GAAQ,GAAKA,GAE/C,IAAIG,EAAQ,IACZ,IAAKJ,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAEzBI,GAAS,MADMH,GAAa,EAAJD,EAAU,KACdK,SAAS,MAAMC,OAAO,EAC5C,CAEA,OAAOF,CACX,CAEA,SAASG,IAA6B,IAAhBC,EAAIC,UAAAP,OAAA,QAAAQ,IAAAD,UAAA,GAAAA,UAAA,GAAG,OACzB,MAAME,EAAYH,EAAKI,MAAM,KACvBC,EAAWF,EAAUT,OAAS,GAAKS,EAAU,GAAG,GAClD,GAAGA,EAAU,GAAG,KAAKA,EAAUT,OAAS,GAAKS,EAAU,GAAG,GAAKA,EAAU,GAAG,GAAK,KACjF,IACJ,MAAO,CACLG,GAAI,CACFC,QAASjB,EAAcU,GACvBQ,MAAO,GACPC,OAAQ,IAEVC,SAAUL,EAASM,cAEzB,CAGA,MAAMC,EAAeA,KACjBC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACR,GAAI,CAAEE,MAAO,OAAQO,EAAG,KAAML,UAC/BM,EAAAA,EAAAA,MAACF,EAAAA,EAAG,CAACR,GAAI,CAAEW,QAAS,OAAQC,WAAY,aAAcC,GAAI,EAAGC,SAAU,UAAWV,SAAA,EAC9EG,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACC,UAAU,OAAOC,QAAQ,WAAWf,MAAO,GAAIC,OAAQ,GAAIH,GAAI,CAAEkB,GAAI,IAAKC,WAAY,MAChGT,EAAAA,EAAAA,MAACF,EAAAA,EAAG,CAACR,GAAI,CAAEoB,SAAU,EAAGC,SAAU,GAAIjB,SAAA,EAClCM,EAAAA,EAAAA,MAACF,EAAAA,EAAG,CAACR,GAAI,CAAEW,QAAS,OAAQW,eAAgB,gBAAiBV,WAAY,SAAUC,GAAI,IAAMT,SAAA,EACzFM,EAAAA,EAAAA,MAACa,EAAAA,EAAK,CAACvB,GAAI,CAAEoB,SAAU,EAAGC,SAAU,EAAGH,GAAI,GAAId,SAAA,EAC3CG,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACC,UAAU,OAAOb,OAAQ,GAAID,MAAM,SAC7CK,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACC,UAAU,OAAOb,OAAQ,GAAID,MAAM,MAAMF,GAAI,CAAEwB,GAAI,UAEjEjB,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACC,UAAU,OAAOb,OAAQ,GAAID,MAAM,OAAOF,GAAI,CAAEmB,WAAY,SAE1EZ,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACE,QAAQ,OAAOjB,GAAI,CAAEyB,SAAU,WAAYZ,GAAI,EAAGX,MAAO,WACnEK,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACE,QAAQ,OAAOjB,GAAI,CAAEyB,SAAU,WAAYvB,MAAO,MAAOW,GAAI,MACvEH,EAAAA,EAAAA,MAACa,EAAAA,EAAK,CAACG,UAAU,MAAMC,QAAS,EAAEvB,SAAA,EAC9BG,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACE,QAAQ,WAAWf,MAAO,GAAIC,OAAQ,MAChDI,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACE,QAAQ,WAAWf,MAAO,GAAIC,OAAQ,MAChDI,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACE,QAAQ,WAAWf,MAAO,GAAIC,OAAQ,MAChDI,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACE,QAAQ,WAAWf,MAAO,GAAIC,OAAQ,gBAQ9DyB,EAAaC,IAAoD,IAAnD,WAAEC,EAAU,cAAEC,EAAa,eAAEC,GAAgBH,EAC7D,MAAMI,EAAaH,EAAWI,QAAU,IAClCC,EAAY,UAASL,EAAWI,OAAUE,SAASH,EAAWzC,OAAO,GAAI,IAAM,EAAK,EAAI,GAC9F,IAAI6C,EAAc,mBAElB,IACQP,EAAWQ,WAAaC,IAAOT,EAAWQ,WAAWE,YACrDH,EAAcE,IAAOT,EAAWQ,WAAWG,SAAQ,GAE3D,CAAE,MAAOC,GACLC,QAAQC,MAAM,sCAAuCF,GACrDL,EAAc,YAClB,CACA,MAAMQ,EAAWf,EAAWe,UAAY,iBAClCC,EAAchB,EAAWgB,aAAe,uBAGhD,OACEvC,EAAAA,EAAAA,KAACwC,EAAAA,EAAI,CAACC,IAAI,EAAMC,QAAQ,EAAK7C,UACzBM,EAAAA,EAAAA,MAACF,EAAAA,EAAI,CACHR,GAAI,CACFW,QAAS,OAAQC,WAAY,aAAcsC,IAAK,IAAKzC,EAAG,IACxD,UAAW,CAAE0C,gBAAiB,gBAAkBC,aAAc,YAC9DC,YAAa,UAAWvC,SAAU,SAAUO,SAAU,EAAGnB,MAAO,QAChEE,SAAA,EAEFG,EAAAA,EAAAA,KAAC+C,EAAAA,EAAO,IACD7D,EAAaoD,GACjB7C,GAAI,IAAKP,EAAaoD,GAAU7C,GAAIwB,GAAI,GAAKL,WAAY,MAE5DT,EAAAA,EAAAA,MAACa,EAAAA,EAAK,CAACvB,GAAI,CAAEoB,SAAU,EAAGC,SAAU,GAAIjB,SAAA,CAAC,KACrCM,EAAAA,EAAAA,MAACa,EAAAA,EAAK,CAACG,UAAU,MAAMJ,eAAe,gBAAgBV,WAAW,aAAae,QAAS,EAAG3B,GAAI,CAAEa,GAAI,IAAMT,SAAA,CAAC,KACvGM,EAAAA,EAAAA,MAACa,EAAAA,EAAK,CAACvB,GAAI,CAAEqB,SAAU,GAAIjB,SAAA,CAAC,KACxBM,EAAAA,EAAAA,MAAC6C,EAAAA,EAAU,CAACtC,QAAQ,YAAYuC,WAAW,OAAOC,WAAY,IAAKC,QAAM,EAAC1D,GAAI,CAAE2D,SAAU,QAASvD,SAAA,CAAC,IAC/FyC,MAELnC,EAAAA,EAAAA,MAAC6C,EAAAA,EAAU,CAACtC,QAAQ,UAAU3B,MAAM,iBAAiBmE,WAAY,IAAIrD,SAAA,CAAC,IACjE+B,SAGTzB,EAAAA,EAAAA,MAAC6C,EAAAA,EAAU,CAACtC,QAAQ,UAAU3B,MAAM,iBAAiBU,GAAI,CAAEmB,WAAY,EAAGyC,WAAY,SAAUC,UAAW,SAAUzD,SAAA,CAAC,IAClHiC,SAGR3B,EAAAA,EAAAA,MAAC6C,EAAAA,EAAU,CAACtC,QAAQ,QAAQjB,GAAI,CAAEa,GAAI,EAAGvB,MAAO,eAAgBwE,aAAc,aAAcC,SAAU,aAAcC,UAAW,cAAe5D,SAAA,CAAC,IAC5I0C,MAEHpC,EAAAA,EAAAA,MAACa,EAAAA,EAAK,CAACG,UAAU,MAAMC,QAAS,GAAKf,WAAW,SAASZ,GAAI,CAAEiE,SAAU,QAAS7D,SAAA,CAAC,KAC9EG,EAAAA,EAAAA,KAAC2D,EAAAA,EAAU,CAACC,KAAK,QAAQ,aAAW,YAAW/D,UAACG,EAAAA,EAAAA,KAAC6D,EAAAA,EAAY,CAAC3C,SAAS,UAAUzB,GAAI,CAAEV,MAAO,sBAAmC,KACjIiB,EAAAA,EAAAA,KAAC2D,EAAAA,EAAU,CAACC,KAAK,QAAQ,aAAW,OAAOE,QAASA,IAAMtC,EAAcD,EAAWwC,GAAI,QAAQlE,UAACG,EAAAA,EAAAA,KAACgE,EAAAA,EAAsB,CAAC9C,SAAS,UAAUzB,GAAI,CAAEV,MAAO,sBAAkC,KAC1LiB,EAAAA,EAAAA,KAAC2D,EAAAA,EAAU,CAACC,KAAK,QAAQ,aAAW,eAAc/D,UAACG,EAAAA,EAAAA,KAACiE,EAAAA,EAAa,CAAC/C,SAAS,UAAUzB,GAAI,CAAEV,MAAO,sBAAmC,KACrIiB,EAAAA,EAAAA,KAAC2D,EAAAA,EAAU,CAACC,KAAK,QAAQ,aAAW,QAAQE,QAASA,IAAMrC,EAAeF,EAAWwC,IAAIlE,UAACG,EAAAA,EAAAA,KAACkE,EAAAA,EAAS,CAAChD,SAAS,UAAUzB,GAAI,CAAEV,MAAO,sBAAkC,cAI9K,EAuEZ,QAlEA,WACE,MAAOoF,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChChC,EAAOmC,IAAYH,EAAAA,EAAAA,UAAS,OAEnCI,EAAAA,EAAAA,YAAU,KACgBC,WACtBH,GAAW,GACXC,EAAS,MACT,IACE,MAAMG,QAAsBC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,UACnD,IAAIC,EAAiB,GACrB,IAAK,MAAMC,KAAWL,EAAcM,KAAM,CACxC,MAAMC,EAAWF,EAAQG,OACzB,GAAY,OAARD,QAAQ,IAARA,GAAAA,EAAUE,SAAWC,MAAMC,QAAQJ,EAASE,SAAU,CACxD,MAAMG,EAAqBL,EAASE,QAAQI,KAAI,CAACjE,EAAYkE,KAAW,IAADC,EAAAC,EAAAC,EACrE,MAAMC,EAAoC,QAApBH,EAAAnE,EAAWQ,iBAAS,IAAA2D,GAApBA,EAAsBI,OAASvE,EAAWQ,UAAU+D,SAAW,KACrF,MAAO,IACFvE,EACHwC,GAAIxC,EAAWwC,IAAM,GAAGiB,EAAQjB,aAAa0B,IAC7C1D,UAAW8D,EACXvD,UAA4B,QAAlBqD,EAAAT,EAASa,iBAAS,IAAAJ,OAAA,EAAlBA,EAAoBK,WAAY,iBAC1CrE,QAA0B,QAAlBiE,EAAAV,EAASa,iBAAS,IAAAH,OAAA,EAAlBA,EAAoBK,YAAa,QAAQjB,EAAQjB,GAAGmC,UAAU,EAAG,KACzE3D,YAAahB,EAAWgB,aAAe,GACvC4D,UAAW5E,EAAW4E,WAAa,EACnCC,aAAc7E,EAAW6E,cAAgB,EAC1C,IAEHrB,EAAesB,QAAQd,EACzB,CACF,CACAR,EAAeuB,MAAK,CAACC,EAAGC,KAAC,IAAAC,EAAAC,EAAA,QAAiB,QAAXD,EAAAD,EAAEzE,iBAAS,IAAA0E,OAAA,EAAXA,EAAaE,YAAa,KAAiB,QAAXD,EAAAH,EAAExE,iBAAS,IAAA2E,OAAA,EAAXA,EAAaC,YAAa,EAAE,IAC3F,MAAMC,EAA8B7B,EAAeS,KAAIqB,IAAC,IAAUA,EAAGC,WAAY,WACjF1C,EAAcwC,EAChB,CAAE,MAAOzE,GACPC,QAAQC,MAAM,0BAA2BF,GACzCqC,EAAS,uDACTJ,EAAc,GAChB,CAAC,QACC2C,YAAW,IAAMxC,GAAW,IAAQ,IACtC,GAEFyC,EAAiB,GAChB,IAEH,MAAMC,GAAoBC,EAAAA,EAAAA,cAAY,CAACC,EAAUC,KAAiBhF,QAAQiF,IAAI,gBAAgBD,QAAiBD,IAAW,GAAK,IACzHG,EAAsBH,IAAe/E,QAAQiF,IAAI,qCAAqCF,IAAW,EAGvG,OAAI7C,GACOnE,EAAAA,EAAAA,MAACF,EAAAA,EAAG,CAACR,GAAI,CAAEE,MAAO,QAASE,SAAA,CAAC,IAAEwF,MAAMkC,KAAK,IAAIlC,MAAM,IAAIG,KAAI,CAACgC,EAAG/B,KAAWzF,EAAAA,EAAAA,KAACD,EAAY,GAAM0F,KAAY,OAEhHpD,GACKrC,EAAAA,EAAAA,KAACyH,EAAAA,EAAK,CAACC,SAAS,QAAQjI,GAAI,CAAEoH,EAAG,GAAIhH,SAAEwC,IAEtB,IAAtB8B,EAAWtF,QACJmB,EAAAA,EAAAA,KAACgD,EAAAA,EAAU,CAACtC,QAAQ,QAAQ3B,MAAM,iBAAiB4I,MAAM,SAASlI,GAAI,CAAES,EAAG,GAAIL,SAAC,iCAGzFM,EAAAA,EAAAA,MAACa,EAAAA,EAAK,CAACI,QAAS,EAAG3B,GAAI,CAAEE,MAAO,QAASE,SAAA,CAAC,IACrCsE,EAAWqB,KAAKjE,IAAiBvB,EAAAA,EAAAA,KAACqB,EAAU,CAAqBE,WAAYA,EAAYC,cAAeyF,EAAmBxF,eAAgB6F,GAAzF/F,EAAWwC,QAGtE,C","sources":["components/AllMomentList.js"],"sourcesContent":["// src/components/AllMomentList.js\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\n\r\n// ========= CORE MUI & MOMENT IMPORTS =========\r\nimport {\r\n  Alert, // Needed for error display\r\n  Avatar, // Needed for MomentItem\r\n  Box, // Needed for MomentItem & main layout\r\n  Fade, // Needed for MomentItem\r\n  IconButton, // Needed for MomentItem actions\r\n  Skeleton, // Needed for PostSkeleton\r\n  Stack, // Needed for MomentItem & main layout\r\n  Typography, // Needed for MomentItem & main layout\r\n} from '@mui/material';\r\nimport moment from 'moment'; // Needed for MomentItem date formatting\r\n\r\n// ========= MUI ICONS IMPORTS =========\r\n// Ensure ALL icons used in MomentItem are imported correctly\r\nimport LanguageIcon from '@mui/icons-material/Language';\r\nimport ThumbUpAltOutlinedIcon from '@mui/icons-material/ThumbUpAltOutlined';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport ReplyIcon from '@mui/icons-material/Reply';\r\n\r\n// ========= FIREBASE IMPORTS =========\r\nimport { db } from '../firebase'; // Assuming '../firebase' is correct\r\nimport { collection, getDocs } from 'firebase/firestore';\r\n\r\n\r\n// ========= HELPER FUNCTIONS (Define BEFORE use) =========\r\nfunction stringToColor(string) {\r\n    let hash = 0;\r\n    let i;\r\n    /* eslint-disable no-bitwise */\r\n    for (i = 0; i < string.length; i += 1) {\r\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    let color = '#';\r\n    for (i = 0; i < 3; i += 1) {\r\n      const value = (hash >> (i * 8)) & 0xff;\r\n      color += `00${value.toString(16)}`.slice(-2);\r\n    }\r\n    /* eslint-enable no-bitwise */\r\n    return color;\r\n}\r\n\r\nfunction stringAvatar(name = 'User') {\r\n    const nameParts = name.split(' ');\r\n    const initials = nameParts.length > 0 && nameParts[0][0]\r\n      ? `${nameParts[0][0]}${nameParts.length > 1 && nameParts[1][0] ? nameParts[1][0] : ''}`\r\n      : '?';\r\n    return {\r\n      sx: {\r\n        bgcolor: stringToColor(name), // Uses stringToColor\r\n        width: 40,\r\n        height: 40,\r\n      },\r\n      children: initials.toUpperCase(),\r\n    };\r\n}\r\n\r\n// ========= SKELETON COMPONENT =========\r\nconst PostSkeleton = () => (\r\n    <Box sx={{ width: '100%', p: 1.5 }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'flex-start', mb: 2, overflow: 'hidden' }}>\r\n            <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} sx={{ mr: 1.5, flexShrink: 0 }} />\r\n            <Box sx={{ flexGrow: 1, minWidth: 0 }}>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 0.5 }}>\r\n                    <Stack sx={{ flexGrow: 1, minWidth: 0, mr: 1 }}>\r\n                        <Skeleton animation=\"wave\" height={12} width=\"60%\" />\r\n                        <Skeleton animation=\"wave\" height={10} width=\"40%\" sx={{ mt: 0.5 }}/>\r\n                    </Stack>\r\n                    <Skeleton animation=\"wave\" height={10} width=\"40px\" sx={{ flexShrink: 0 }} />\r\n                </Box>\r\n                <Skeleton variant=\"text\" sx={{ fontSize: '0.875rem', mb: 1, width: '100%' }} />\r\n                <Skeleton variant=\"text\" sx={{ fontSize: '0.875rem', width: '80%', mb: 1 }} />\r\n                <Stack direction=\"row\" spacing={1}>\r\n                    <Skeleton variant=\"circular\" width={24} height={24} />\r\n                    <Skeleton variant=\"circular\" width={24} height={24} />\r\n                    <Skeleton variant=\"circular\" width={24} height={24} />\r\n                    <Skeleton variant=\"circular\" width={24} height={24} />\r\n                </Stack>\r\n            </Box>\r\n        </Box>\r\n    </Box>\r\n);\r\n\r\n// ========= MOMENT ITEM COMPONENT =========\r\nconst MomentItem = ({ momentItem, onInteraction, onCommentClick }) => {\r\n    const userIdBase = momentItem.userId || '1';\r\n    const userLevel = `Level ${momentItem.userId ? (parseInt(userIdBase.slice(-1), 10) % 5) + 1 : 1}`;\r\n    let displayTime = 'Date unavailable';\r\n    // Safely format time\r\n    try {\r\n        if (momentItem.createdAt && moment(momentItem.createdAt).isValid()) {\r\n            displayTime = moment(momentItem.createdAt).fromNow(true);\r\n        }\r\n    } catch (err) {\r\n        console.error('[MomentItem] Error processing date:', err);\r\n        displayTime = 'Date error';\r\n    }\r\n    const userName = momentItem.userName || 'Anonymous User';\r\n    const description = momentItem.description || 'No content provided.';\r\n\r\n  // Ensure all components used inside the return() are imported above\r\n  return (\r\n    <Fade in={true} appear={true}>\r\n        <Box // Uses Box (Imported)\r\n          sx={{\r\n            display: 'flex', alignItems: 'flex-start', gap: 1.5, p: 1.5,\r\n            '&:hover': { backgroundColor: 'action.hover' }, borderBottom: '1px solid',\r\n            borderColor: 'divider', overflow: 'hidden', minWidth: 0, width: '100%'\r\n          }}\r\n        >\r\n          <Avatar // Uses Avatar (Imported)\r\n             {...stringAvatar(userName)} // Uses helper (Defined above)\r\n             sx={{ ...stringAvatar(userName).sx, mt: 0.5, flexShrink: 0 }}\r\n          />\r\n          <Stack sx={{ flexGrow: 1, minWidth: 0 }}> {/* Uses Stack (Imported) */}\r\n              <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"flex-start\" spacing={1} sx={{ mb: 0.5 }}> {/* Uses Stack */}\r\n                  <Stack sx={{ minWidth: 0 }}> {/* Uses Stack */}\r\n                      <Typography variant=\"subtitle2\" fontWeight=\"bold\" lineHeight={1.3} noWrap sx={{ maxWidth: '100%' }}> {/* Uses Typography (Imported) */}\r\n                          {userName}\r\n                      </Typography>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\" lineHeight={1.2}> {/* Uses Typography */}\r\n                          {userLevel}\r\n                      </Typography>\r\n                  </Stack>\r\n                  <Typography variant=\"caption\" color=\"text.secondary\" sx={{ flexShrink: 0, whiteSpace: 'nowrap', textAlign: 'right' }}> {/* Uses Typography */}\r\n                     {displayTime}\r\n                  </Typography>\r\n              </Stack>\r\n              <Typography variant=\"body2\" sx={{ mb: 1, color: 'text.primary', overflowWrap: 'break-word', wordWrap: 'break-word', wordBreak: 'break-word' }}> {/* Uses Typography */}\r\n                {description}\r\n              </Typography>\r\n              <Stack direction=\"row\" spacing={0.5} alignItems=\"center\" sx={{ flexWrap: 'wrap' }}> {/* Uses Stack */}\r\n                   <IconButton size=\"small\" aria-label=\"translate\"><LanguageIcon fontSize=\"inherit\" sx={{ color: 'text.secondary' }} /></IconButton> {/* Uses IconButton, LanguageIcon (Imported) */}\r\n                   <IconButton size=\"small\" aria-label=\"like\" onClick={() => onInteraction(momentItem.id, 'like')}><ThumbUpAltOutlinedIcon fontSize=\"inherit\" sx={{ color: 'text.secondary' }}/></IconButton> {/* Uses IconButton, ThumbUpAltOutlinedIcon (Imported) */}\r\n                   <IconButton size=\"small\" aria-label=\"more options\"><MoreHorizIcon fontSize=\"inherit\" sx={{ color: 'text.secondary' }} /></IconButton> {/* Uses IconButton, MoreHorizIcon (Imported) */}\r\n                   <IconButton size=\"small\" aria-label=\"reply\" onClick={() => onCommentClick(momentItem.id)}><ReplyIcon fontSize=\"inherit\" sx={{ color: 'text.secondary' }}/></IconButton> {/* Uses IconButton, ReplyIcon (Imported) */}\r\n              </Stack>\r\n          </Stack>\r\n        </Box>\r\n    </Fade> // Uses Fade (Imported)\r\n  );\r\n};\r\n\r\n// ========= MAIN COMPONENT DEFINITION =========\r\nfunction AllMomentList() {\r\n  const [allMoments, setAllMoments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAllMoments = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, \"users\"));\r\n        let allMomentsData = [];\r\n        for (const userDoc of querySnapshot.docs) {\r\n          const userData = userDoc.data();\r\n          if (userData?.moments && Array.isArray(userData.moments)) { // Added safe navigation for userData\r\n            const momentWithUserInfo = userData.moments.map((momentItem, index) => {\r\n              const createdAtDate = momentItem.createdAt?.toDate ? momentItem.createdAt.toDate() : null;\r\n              return {\r\n                ...momentItem,\r\n                id: momentItem.id || `${userDoc.id}-moment-${index}`,\r\n                createdAt: createdAtDate,\r\n                userName: userData.basicInfo?.fullName || 'Anonymous User',\r\n                userId: userData.basicInfo?.studentId || `user-${userDoc.id.substring(0, 5)}`,\r\n                description: momentItem.description || '',\r\n                likeCount: momentItem.likeCount || 0,\r\n                commentCount: momentItem.commentCount || 0,\r\n              };\r\n            });\r\n            allMomentsData.push(...momentWithUserInfo);\r\n          }\r\n        }\r\n        allMomentsData.sort((a, b) => (b.createdAt?.getTime() || 0) - (a.createdAt?.getTime() || 0)); // Safer sort\r\n        const momentsWithInteractionState = allMomentsData.map(m => ({ ...m, userAction: 'none' }));\r\n        setAllMoments(momentsWithInteractionState);\r\n      } catch (err) {\r\n        console.error('Error fetching moments:', err);\r\n        setError('Failed to load discussions. Please try again later.');\r\n        setAllMoments([]);\r\n      } finally {\r\n        setTimeout(() => setLoading(false), 300);\r\n      }\r\n    };\r\n    fetchAllMoments();\r\n  }, []);\r\n\r\n  const handleInteraction = useCallback((momentId, actionType) => { console.log(`Interaction: ${actionType} on ${momentId}`); }, []);\r\n  const handleCommentClick = (momentId) => { console.log(`Reply/Comment clicked for moment: ${momentId}`); };\r\n\r\n  // --- Render Logic ---\r\n  if (loading) {\r\n    return ( <Box sx={{ width: '100%' }}> {Array.from(new Array(3)).map((_, index) => (<PostSkeleton key={index} />))} </Box> );\r\n  }\r\n  if (error) {\r\n    return <Alert severity=\"error\" sx={{ m: 2 }}>{error}</Alert>; // Uses Alert (Imported)\r\n  }\r\n  if (allMoments.length === 0) {\r\n    return ( <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ p: 3 }}> No discussions found yet. </Typography> ); // Uses Typography\r\n  }\r\n  return (\r\n    <Stack spacing={0} sx={{ width: '100%' }}> {/* Uses Stack */}\r\n        {allMoments.map((momentItem) => ( <MomentItem key={momentItem.id} momentItem={momentItem} onInteraction={handleInteraction} onCommentClick={handleCommentClick} /> ))}\r\n    </Stack>\r\n  );\r\n}\r\n\r\n// ========= EXPORT STATEMENT =========\r\nexport default AllMomentList; // Ensure default export is correct"],"names":["stringToColor","string","i","hash","length","charCodeAt","color","toString","slice","stringAvatar","name","arguments","undefined","nameParts","split","initials","sx","bgcolor","width","height","children","toUpperCase","PostSkeleton","_jsx","Box","p","_jsxs","display","alignItems","mb","overflow","Skeleton","animation","variant","mr","flexShrink","flexGrow","minWidth","justifyContent","Stack","mt","fontSize","direction","spacing","MomentItem","_ref","momentItem","onInteraction","onCommentClick","userIdBase","userId","userLevel","parseInt","displayTime","createdAt","moment","isValid","fromNow","err","console","error","userName","description","Fade","in","appear","gap","backgroundColor","borderBottom","borderColor","Avatar","Typography","fontWeight","lineHeight","noWrap","maxWidth","whiteSpace","textAlign","overflowWrap","wordWrap","wordBreak","flexWrap","IconButton","size","LanguageIcon","onClick","id","ThumbUpAltOutlinedIcon","MoreHorizIcon","ReplyIcon","allMoments","setAllMoments","useState","loading","setLoading","setError","useEffect","async","querySnapshot","getDocs","collection","db","allMomentsData","userDoc","docs","userData","data","moments","Array","isArray","momentWithUserInfo","map","index","_momentItem$createdAt","_userData$basicInfo","_userData$basicInfo2","createdAtDate","toDate","basicInfo","fullName","studentId","substring","likeCount","commentCount","push","sort","a","b","_b$createdAt","_a$createdAt","getTime","momentsWithInteractionState","m","userAction","setTimeout","fetchAllMoments","handleInteraction","useCallback","momentId","actionType","log","handleCommentClick","from","_","Alert","severity","align"],"sourceRoot":""}