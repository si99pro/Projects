{"version":3,"file":"static/js/407.e975fbaa.chunk.js","mappings":"6SAuBA,MAAMA,GAAkBC,EAAAA,EAAAA,GAAOC,EAAAA,EAAU;;;;;;EAQnCC,EAAaF,EAAAA,EAAOG,IAAI;;;;;;;EASxBC,GAAeJ,EAAAA,EAAAA,GAAOK,EAAAA,EAAO;;;EAK7BC,GAAYN,EAAAA,EAAAA,GAAOO,EAAAA,GAAK;;;;;;;;;;EAYxBC,GAAoBR,EAAAA,EAAAA,GAAOS,EAAAA,EAAI;;;EAK/BC,GAAoBV,EAAAA,EAAAA,GAAOS,EAAAA,EAAI;;;;;;;EAuMrC,QA9LA,WACI,MAAOE,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,KACpCK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,KAChCO,EAAUC,IAAeR,EAAAA,EAAAA,UAAS,KAClCS,EAAOC,IAAYV,EAAAA,EAAAA,UAAS,KAC5BW,EAASC,IAAcZ,EAAAA,EAAAA,UAAS,IACjCa,GAAWC,EAAAA,EAAAA,MAsEXC,EAAyBZ,GACF,IAArBA,EAAUa,QAAgBb,EAAUc,WAAW,MACxC,OACqB,IAArBd,EAAUa,QAAgBb,EAAUc,WAAW,MAC/C,OACqB,IAArBd,EAAUa,QAAgBb,EAAUc,WAAW,MAC/C,OACqB,IAArBd,EAAUa,QAAgBb,EAAUc,WAAW,MAC/C,OACqB,IAArBd,EAAUa,QAAgBb,EAAUc,WAAW,MAC/C,OACqB,IAArBd,EAAUa,QAAgBb,EAAUc,WAAW,MAC/C,OACqB,IAArBd,EAAUa,QAAgBb,EAAUc,WAAW,MAC/C,OACqB,IAArBd,EAAUa,QAAgBb,EAAUc,WAAW,MAC/C,OACqB,IAArBd,EAAUa,QAAgBb,EAAUc,WAAW,MAC/C,OACqB,IAArBd,EAAUa,QAAgBb,EAAUc,WAAW,MAC/C,OAEA,KAqBf,OACIC,EAAAA,EAAAA,MAAChC,EAAe,CAACiC,SAAS,KAAIC,SAAA,EAC1BC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,SAASC,cAAY,EAAAL,SAAC,oBAGrDF,EAAAA,EAAAA,MAACvB,EAAiB,CAAAyB,SAAA,CACbX,IAASY,EAAAA,EAAAA,KAACK,EAAAA,EAAK,CAACC,SAAS,QAAOP,SAAEX,IAClCE,IAAWU,EAAAA,EAAAA,KAACK,EAAAA,EAAK,CAACC,SAAS,UAASP,SAAET,QAE3CO,EAAAA,EAAAA,MAAC7B,EAAU,CAACuC,SAnHCC,UAKjB,GAJAC,EAAEC,iBACFrB,EAAS,IACTE,EAAW,IAEc,IAArBT,EAAUa,OAEV,YADAN,EAAS,gCAIb,MAAMsB,EAAQjB,EAAsBZ,GACpC,IAAK6B,EAID,YAHAtB,EACI,0GAOR,GAFwBuB,SAAS9B,EAAU+B,UAAU,EAAG,IAC/BD,SAAS5B,EAAQ6B,UAAU,EAAG,IAChBC,WAAWD,UAAU,EAAG,GAC3DxB,EAAS,8DAIb,IACI,MAKM0B,SALuBC,EAAAA,EAAAA,IACzBC,EAAAA,EACArC,EACAM,IAEwB6B,WAEtBG,EAAAA,EAAAA,IAAsBH,GAG5B,MAAMI,EAvCH,IAAIC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBR,SAAS,MAmD/CS,EAAW,CACbC,UAZc,CACd/C,WACAG,QACAE,YACA6B,QACA3B,UACAmC,YACAM,aAAa,GAMbC,MAAO,CAAC,eAENC,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAASd,EAAKe,KAAMP,GAEzChC,EAAW,kDACXC,EAAS,SAEb,CAAE,MAAOuC,GACLC,QAAQ5C,MAAM2C,GACd1C,EAAS0C,EAAIE,QACjB,GAuDuClC,SAAA,EAC/BC,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CACNC,MAAM,YACNC,MAAO3D,EACP4D,SAAW5B,GAAM/B,EAAY+B,EAAE6B,OAAOF,OACtCG,WAAS,EACTC,OAAO,SACPC,UAAQ,KAEZzC,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CACNC,MAAM,QACNO,KAAK,QACLN,MAAOxD,EACPyD,SAAW5B,GAAM5B,EAAS4B,EAAE6B,OAAOF,OACnCG,WAAS,EACTC,OAAO,SACPC,UAAQ,KAEZ5C,EAAAA,EAAAA,MAACrB,EAAiB,CAAAuB,SAAA,EACdC,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CACNC,MAAM,aACNC,MAAOtD,EACPuD,SAAW5B,GAAM1B,EAAa0B,EAAE6B,OAAOF,OACvCG,WAAS,EACTC,OAAO,SACPC,UAAQ,KAEZ5C,EAAAA,EAAAA,MAAC8C,EAAAA,EAAW,CAACJ,WAAS,EAACC,OAAO,SAASC,UAAQ,EAAA1C,SAAA,EAC3CC,EAAAA,EAAAA,KAAC4C,EAAAA,EAAU,CAACC,GAAG,gBAAe9C,SAAC,aAC/BF,EAAAA,EAAAA,MAACiD,EAAAA,EAAM,CACHC,QAAQ,gBACRF,GAAG,UACHT,MAAOpD,EACPqD,SAAW5B,GAAMxB,EAAWwB,EAAE6B,OAAOF,OACrCD,MAAM,UAASpC,SAAA,EAEfC,EAAAA,EAAAA,KAACgD,EAAAA,EAAQ,CAACZ,MAAM,GAAErC,SAAC,YA9DZkD,MAC3B,MACMC,GAAc,IAAIC,MAAOC,cACzBC,EAAU,GAEhB,IAAK,IAAIC,EAJS,KAIMA,GAAKJ,EAAaI,IAAK,CAC3C,MAAMC,EAAe,GAAGD,OAAOA,EAAI,IACnCD,EAAQG,MACJxD,EAAAA,EAAAA,KAACgD,EAAAA,EAAQ,CAASZ,MAAOmB,EAAaxD,SACjCwD,GADUD,GAIvB,CAEA,OAAOD,CAAO,EAiDOJ,aAKbjD,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CACNC,MAAM,WACNO,KAAK,WACLN,MAAOlD,EACPmD,SAAW5B,GAAMtB,EAAYsB,EAAE6B,OAAOF,OACtCG,WAAS,EACTC,OAAO,SACPC,UAAQ,KAEZzC,EAAAA,EAAAA,KAAC9B,EAAY,CAACgC,QAAQ,YAAYuD,MAAM,UAAUf,KAAK,SAAQ3C,SAAC,aAGhEC,EAAAA,EAAAA,KAAC5B,EAAS,CAACsF,GAAG,SAAQ3D,SAAC,wCAIvC,C","sources":["auth/Signup.js"],"sourcesContent":["// src/auth/Signup.js\r\nimport React, { useState } from 'react'; // Removed useEffect from import\r\nimport { auth, db } from '../firebase'; // Import Firebase auth and db\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    sendEmailVerification,\r\n} from 'firebase/auth';\r\nimport { doc, setDoc } from 'firebase/firestore';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport {\r\n    TextField,\r\n    Button,\r\n    Container,\r\n    Typography,\r\n    Alert,\r\n    Box,\r\n    Select,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl,\r\n} from '@mui/material';\r\nimport styled from '@emotion/styled';\r\n\r\nconst StyledContainer = styled(Container)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  width: 100%;\r\n  max-width: 400px;\r\n  padding: 32px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 20px;\r\n  width: 100%;\r\n`;\r\n\r\nconst LoginLink = styled(Link)`\r\n  margin-top: 16px;\r\n  display: block;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  color: #1976d2;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst ErrorMessageSpace = styled(Box)`\r\n  min-height: 53px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst StudentSessionRow = styled(Box)`\r\n  display: flex;\r\n  gap: 20px;\r\n\r\n  & > div {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nfunction Signup() {\r\n    const [fullName, setFullName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [studentId, setStudentId] = useState('');\r\n    const [session, setSession] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const generateRandomColor = () => {\r\n        // Generate a random hex color code\r\n        return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        setSuccess('');\r\n\r\n        if (studentId.length !== 7) {\r\n            setError('Student ID must be 7 digits.');\r\n            return;\r\n        }\r\n\r\n        const batch = getBatchFromStudentId(studentId);\r\n        if (!batch) {\r\n            setError(\r\n                'Could not determine batch from Student ID. ID must start with 16, 17, 18, 19, 20, 21, 22, 23, 24 or 25'\r\n            );\r\n            return;\r\n        }\r\n\r\n        const studentIdPrefix = parseInt(studentId.substring(0, 2));\r\n        const sessionStartYear = parseInt(session.substring(0, 4)); //parse the start year to check with the id prefix\r\n        if (studentIdPrefix > sessionStartYear.toString().substring(2, 4)) {\r\n            setError('Make sure that you have typed correct ID and Session.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const userCredential = await createUserWithEmailAndPassword(\r\n                auth,\r\n                email,\r\n                password\r\n            );\r\n            const user = userCredential.user;\r\n\r\n            await sendEmailVerification(user);\r\n\r\n            // Generate profile background color and create basicInfo object\r\n            const profilebg = generateRandomColor();\r\n            const basicInfo = {\r\n                fullName,\r\n                email,\r\n                studentId,\r\n                batch,\r\n                session,\r\n                profilebg,\r\n                emailStatus: false, // Initially set to false (not verified)\r\n            };\r\n\r\n            // Store user data in Firestore\r\n            const userData = {\r\n                basicInfo: basicInfo, // Store basicInfo object as an array\r\n                roles: ['user'], // SET DEFAULT ROLE HERE\r\n            };\r\n            await setDoc(doc(db, 'users', user.uid), userData);\r\n\r\n            setSuccess('Check your inbox to verify your email address.');\r\n            navigate('/login');\r\n\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const getBatchFromStudentId = (studentId) => {\r\n        if (studentId.length === 7 && studentId.startsWith('16')) {\r\n            return '2016';\r\n        } else if (studentId.length === 7 && studentId.startsWith('17')) {\r\n            return '2017';\r\n        } else if (studentId.length === 7 && studentId.startsWith('18')) {\r\n            return '2018';\r\n        } else if (studentId.length === 7 && studentId.startsWith('19')) {\r\n            return '2019';\r\n        } else if (studentId.length === 7 && studentId.startsWith('20')) {\r\n            return '2020';\r\n        } else if (studentId.length === 7 && studentId.startsWith('21')) {\r\n            return '2021';\r\n        } else if (studentId.length === 7 && studentId.startsWith('22')) {\r\n            return '2022';\r\n        } else if (studentId.length === 7 && studentId.startsWith('23')) {\r\n            return '2023';\r\n        } else if (studentId.length === 7 && studentId.startsWith('24')) {\r\n            return '2024';\r\n        } else if (studentId.length === 7 && studentId.startsWith('25')) {\r\n            return '2025';\r\n        } else {\r\n            return null; // Or some default value, or handle the error\r\n        }\r\n    };\r\n\r\n    const generateSessionOptions = () => {\r\n        const startYear = 2016;\r\n        const currentYear = new Date().getFullYear(); // Get current year\r\n        const options = [];\r\n\r\n        for (let i = startYear; i <= currentYear; i++) {\r\n            const sessionValue = `${i} - ${i + 3}`;\r\n            options.push(\r\n                <MenuItem key={i} value={sessionValue}>\r\n                    {sessionValue}\r\n                </MenuItem>\r\n            );\r\n        }\r\n\r\n        return options;\r\n    };\r\n\r\n    return (\r\n        <StyledContainer maxWidth=\"sm\">\r\n            <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n                Create Account\r\n            </Typography>\r\n            <ErrorMessageSpace>\r\n                {error && <Alert severity=\"error\">{error}</Alert>}\r\n                {success && <Alert severity=\"success\">{success}</Alert>}\r\n            </ErrorMessageSpace>\r\n            <StyledForm onSubmit={handleSubmit}>\r\n                <TextField\r\n                    label=\"Full Name\"\r\n                    value={fullName}\r\n                    onChange={(e) => setFullName(e.target.value)}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    required\r\n                />\r\n                <TextField\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    required\r\n                />\r\n                <StudentSessionRow>\r\n                    <TextField\r\n                        label=\"Student ID\"\r\n                        value={studentId}\r\n                        onChange={(e) => setStudentId(e.target.value)}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        required\r\n                    />\r\n                    <FormControl fullWidth margin=\"normal\" required>\r\n                        <InputLabel id=\"session-label\">Session</InputLabel>\r\n                        <Select\r\n                            labelId=\"session-label\"\r\n                            id=\"session\"\r\n                            value={session}\r\n                            onChange={(e) => setSession(e.target.value)}\r\n                            label=\"Session\"\r\n                        >\r\n                            <MenuItem value=\"\">Session</MenuItem>\r\n                            {generateSessionOptions()}\r\n                        </Select>\r\n                    </FormControl>\r\n                </StudentSessionRow>\r\n\r\n                <TextField\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    required\r\n                />\r\n                <StyledButton variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    Sign Up\r\n                </StyledButton>\r\n                <LoginLink to=\"/login\">Already have an account? Login</LoginLink>\r\n            </StyledForm>\r\n        </StyledContainer>\r\n    );\r\n}\r\n\r\nexport default Signup;"],"names":["StyledContainer","styled","Container","StyledForm","form","StyledButton","Button","LoginLink","Link","ErrorMessageSpace","Box","StudentSessionRow","fullName","setFullName","useState","email","setEmail","studentId","setStudentId","session","setSession","password","setPassword","error","setError","success","setSuccess","navigate","useNavigate","getBatchFromStudentId","length","startsWith","_jsxs","maxWidth","children","_jsx","Typography","variant","align","gutterBottom","Alert","severity","onSubmit","async","e","preventDefault","batch","parseInt","substring","toString","user","createUserWithEmailAndPassword","auth","sendEmailVerification","profilebg","Math","floor","random","userData","basicInfo","emailStatus","roles","setDoc","doc","db","uid","err","console","message","TextField","label","value","onChange","target","fullWidth","margin","required","type","FormControl","InputLabel","id","Select","labelId","MenuItem","generateSessionOptions","currentYear","Date","getFullYear","options","i","sessionValue","push","color","to"],"sourceRoot":""}