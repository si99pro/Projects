{"version":3,"file":"static/js/627.a6b05dc5.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/CheckCircleOutline.js","../node_modules/@mui/icons-material/esm/LockOutlined.js","auth/Login.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 7.58 10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}), 'CheckCircleOutline');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2M9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9zm9 14H6V10h12zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2\"\n}), 'LockOutlined');","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { auth } from '../firebase'; // Assuming firebase.js is configured correctly\r\nimport {\r\n  signInWithEmailAndPassword,\r\n  sendEmailVerification,\r\n  onAuthStateChanged,\r\n} from 'firebase/auth';\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  Alert,\r\n  Box,\r\n  Paper,\r\n  Stack,\r\n  CircularProgress,\r\n  Link,\r\n  Avatar,\r\n  Divider,\r\n} from '@mui/material';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [resendStatus, setResendStatus] = useState('');\r\n  const [authStatus, setAuthStatus] = useState({\r\n    loading: true,\r\n    isLoggedIn: false,\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  // This listener handles scenario 2: Detecting users already logged in when they visit /login\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      console.log(\"Auth state changed:\", user); // Debug log\r\n      if (user && user.emailVerified) {\r\n        setAuthStatus({ loading: false, isLoggedIn: true });\r\n      } else {\r\n        setAuthStatus({ loading: false, isLoggedIn: false });\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleResendVerification = async () => {\r\n    // ... (Resend verification logic remains the same)\r\n    setError('');\r\n    setResendStatus('Sending...');\r\n    if (auth.currentUser) {\r\n      try {\r\n        await sendEmailVerification(auth.currentUser);\r\n        setResendStatus('Verification email resent. Check your inbox.');\r\n      } catch (err) {\r\n        console.error(\"Resend Error:\", err);\r\n        setResendStatus(`Error resending: ${err.message}`);\r\n      }\r\n    } else {\r\n      setResendStatus('Error: No user context found to resend email.');\r\n    }\r\n  };\r\n\r\n  // This function handles scenario 1: Logging in via the form\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setResendStatus('');\r\n    setLoading(true);\r\n\r\n    // Optional double-check, though the form shouldn't be visible if logged in\r\n    if (authStatus.isLoggedIn) {\r\n        setLoading(false);\r\n        navigate('/dashboard'); // Redirect if somehow submitted while logged in\r\n        return;\r\n    }\r\n\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      const user = userCredential.user;\r\n\r\n      if (!user.emailVerified) {\r\n        setError(\r\n          'Please verify your email before logging in. Check your inbox/spam folder.'\r\n        );\r\n        setLoading(false);\r\n        // Do NOT navigate - user needs to verify first.\r\n        return;\r\n      }\r\n\r\n      // *** SUCCESS & VERIFIED ***\r\n      // User successfully logged in via the form and IS verified.\r\n      // Navigate them directly to the dashboard.\r\n      console.log(\"Login successful and verified via form, navigating...\"); // Debug log\r\n      // Setting loading false isn't strictly necessary as navigation will unmount,\r\n      // but it doesn't hurt.\r\n      setLoading(false);\r\n      navigate('/dashboard'); // <<< Direct navigation on successful login + verification\r\n\r\n    } catch (err) {\r\n      console.error(\"Login Error:\", err);\r\n      let friendlyError = 'Login failed. Please check your credentials.';\r\n      if (err.code === 'auth/user-not-found' || err.code === 'auth/wrong-password' || err.code === 'auth/invalid-credential') {\r\n        friendlyError = 'Invalid email or password.';\r\n      } else if (err.code === 'auth/too-many-requests') {\r\n        friendlyError = 'Too many login attempts. Please try again later.';\r\n      } else if (err.code === 'auth/network-request-failed') {\r\n          friendlyError = 'Network error. Please check your connection.';\r\n      }\r\n      setError(friendlyError);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const showResendButton = error && error.startsWith('Please verify your email');\r\n\r\n  // --- Render Logic ---\r\n\r\n  // 1. Show loading indicator while checking initial auth state\r\n  if (authStatus.loading) {\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <Box sx={{ /* ... loading styles ... */ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  // 2. If initial check reveals user IS logged in, show the \"Already Logged In\" message\r\n  if (authStatus.isLoggedIn) {\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <Box sx={{ /* ... centered box styles ... */ marginTop: 8, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n           <Paper elevation={3} sx={{ /* ... paper styles ... */ p: { xs: 3, sm: 4 }, mt: 3, width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center', textAlign: 'center' }}>\r\n              <Avatar sx={{ m: 1, bgcolor: 'success.main' }}>\r\n                <CheckCircleOutlineIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\" gutterBottom>\r\n                Already Logged In\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ mb: 3 }}>\r\n                You are already logged in.\r\n              </Typography>\r\n              <Button\r\n                variant=\"contained\"\r\n                fullWidth\r\n                onClick={() => navigate('/dashboard')}\r\n              >\r\n                Go to Dashboard\r\n              </Button>\r\n           </Paper>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  // 3. If initial check reveals user IS NOT logged in, show the Login Form\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Box sx={{ /* ... centered box styles ... */ marginTop: 8, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\" gutterBottom>\r\n            Login\r\n          </Typography>\r\n\r\n          <Paper elevation={3} sx={{ /* ... paper styles ... */ p: { xs: 2, sm: 4 }, mt: 3, width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n            <Box component=\"form\" onSubmit={handleSubmit} sx={{ width: '100%' }}>\r\n              <Stack spacing={2}>\r\n                {/* Error Alert Area */}\r\n                {error && (\r\n                  <Alert\r\n                    severity=\"error\"\r\n                    action={\r\n                      showResendButton ? (\r\n                        <Button\r\n                          color=\"inherit\"\r\n                          size=\"small\"\r\n                          onClick={handleResendVerification}\r\n                          disabled={resendStatus === 'Sending...'}\r\n                        >\r\n                          Resend Email\r\n                        </Button>\r\n                      ) : null\r\n                    }\r\n                  >\r\n                    {error}\r\n                  </Alert>\r\n                )}\r\n                {resendStatus && !error && (\r\n                  <Alert severity={resendStatus.startsWith('Error:') ? \"warning\" : \"info\"}>\r\n                    {resendStatus}\r\n                  </Alert>\r\n                )}\r\n\r\n                {/* TextFields, Button, Links... */}\r\n                <TextField\r\n                  label=\"Email Address\" /* ... props ... */\r\n                  value={email} onChange={(e) => setEmail(e.target.value)} disabled={loading} fullWidth required autoFocus autoComplete=\"email\"\r\n                 />\r\n                <TextField\r\n                   label=\"Password\" /* ... props ... */ type=\"password\"\r\n                   value={password} onChange={(e) => setPassword(e.target.value)} disabled={loading} fullWidth required autoComplete=\"current-password\"\r\n                 />\r\n                <Box sx={{ position: 'relative', mt: 1 }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    disabled={loading}\r\n                    sx={{ mt: 1, mb: 2 }}\r\n                  >\r\n                    {loading ? 'Logging in...' : 'Login'}\r\n                  </Button>\r\n                  {loading && (\r\n                    <CircularProgress size={24} sx={{ /* ... progress styles ... */ color: 'primary.main', position: 'absolute', top: '50%', left: '50%', marginTop: '-12px', marginLeft: '-12px' }} />\r\n                  )}\r\n                </Box>\r\n\r\n                <Link component={RouterLink} to=\"/signup\" variant=\"body2\" align=\"center\" sx={{ display: 'block' }}>\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Stack>\r\n            </Box>\r\n          </Paper>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;"],"names":["createSvgIcon","_jsx","d","email","setEmail","useState","password","setPassword","error","setError","loading","setLoading","resendStatus","setResendStatus","authStatus","setAuthStatus","isLoggedIn","navigate","useNavigate","useEffect","unsubscribe","onAuthStateChanged","auth","user","console","log","emailVerified","showResendButton","startsWith","Container","component","maxWidth","children","Box","sx","display","justifyContent","alignItems","height","CircularProgress","marginTop","flexDirection","_jsxs","Paper","elevation","p","xs","sm","mt","width","textAlign","Avatar","m","bgcolor","CheckCircleOutlineIcon","Typography","variant","gutterBottom","mb","Button","fullWidth","onClick","LockOutlinedIcon","onSubmit","async","e","preventDefault","userCredential","signInWithEmailAndPassword","err","friendlyError","code","Stack","spacing","Alert","severity","action","color","size","currentUser","sendEmailVerification","message","disabled","TextField","label","value","onChange","target","required","autoFocus","autoComplete","type","position","top","left","marginLeft","Link","RouterLink","to","align"],"sourceRoot":""}