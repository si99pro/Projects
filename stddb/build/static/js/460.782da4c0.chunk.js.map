{"version":3,"file":"static/js/460.782da4c0.chunk.js","mappings":"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","sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","components/MomentForm.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// src/components/MomentForm.js\r\nimport React, { useState } from 'react';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  Alert,\r\n} from '@mui/material'; // Removed Box from import\r\nimport styled from '@emotion/styled';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { auth, db } from '../firebase';\r\nimport { doc, updateDoc, arrayUnion } from 'firebase/firestore';\r\nimport { v4 as uuidv4 } from 'uuid'; // Import UUID\r\nimport Navbar from '../components/Navbar'; // Import Navbar Component\r\n\r\nconst StyledContainer = styled(Container)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 60vh; /* Adjusted for smaller height */\r\n  padding: 20px;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  width: 100%;\r\n  max-width: 400px;\r\n  padding: 32px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 16px;\r\n`;\r\n\r\nfunction MomentForm() {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    try {\r\n      const user = auth.currentUser;\r\n      if (!user) {\r\n        setError('You must be logged in to create a moment.');\r\n        return;\r\n      }\r\n\r\n      const momentData = {\r\n        id: uuidv4(), // Generate a unique ID\r\n        title: title,\r\n        description: description,\r\n        createdAt: new Date(), // Add a timestamp\r\n      };\r\n\r\n      const userDocRef = doc(db, 'users', user.uid);\r\n      await updateDoc(userDocRef, {\r\n        moments: arrayUnion(momentData), // Changed to \"moments\"\r\n      });\r\n\r\n      console.log('Moment saved successfully!');\r\n      navigate('/dashboard'); // Redirect to dashboard after saving\r\n    } catch (err) {\r\n      console.error('Error saving moment:', err);\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>  {/* Use a fragment to wrap both the Navbar and the form content */}\r\n      <Navbar /> {/* Include the Navbar component */}\r\n      <StyledContainer maxWidth=\"sm\">\r\n        <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n          Create New Moment\r\n        </Typography>\r\n        {error && <Alert severity=\"error\">{error}</Alert>}\r\n        <StyledForm onSubmit={handleSubmit}>\r\n          <TextField\r\n            label=\"Title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            required\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            label=\"Description\"\r\n            multiline\r\n            rows={4}\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            required\r\n            fullWidth\r\n          />\r\n          <StyledButton variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Share Moment\r\n          </StyledButton>\r\n        </StyledForm>\r\n      </StyledContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MomentForm;"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","REGEX","test","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","validate","TypeError","options","buf","rnds","random","stringify","StyledContainer","styled","Container","StyledForm","form","StyledButton","Button","title","setTitle","useState","description","setDescription","error","setError","navigate","useNavigate","_jsxs","_Fragment","children","_jsx","Navbar","maxWidth","Typography","variant","align","gutterBottom","Alert","severity","onSubmit","async","e","preventDefault","user","auth","currentUser","momentData","id","uuidv4","createdAt","Date","userDocRef","doc","db","uid","updateDoc","moments","arrayUnion","console","log","err","message","TextField","label","value","onChange","target","required","fullWidth","multiline","rows","color","type"],"sourceRoot":""}