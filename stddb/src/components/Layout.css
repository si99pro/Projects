/* src/components/Layout.css */

/* --- Layout Wrapper --- */
.app-layout-wrapper {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  background-color: var(--color-bg-primary);
}

/* --- Main Grid Container (Desktop First - applies >= 900px by default) --- */
.main-grid-container {
  flex-grow: 1;
  display: grid;
  /* Columns: Left Sidebar | Main Content (Flexible) | Right Sidebar */
  grid-template-columns: var(--sidebar-left-width) minmax(0, 1fr) var(--sidebar-right-width);
  gap: var(--layout-gap);
  /* Padding top is set dynamically by JS to account for header height */
  padding-bottom: var(--spacing-lg);
  padding-left: var(--layout-padding-x);
  padding-right: var(--layout-padding-x);
  /* Overall max width for the entire grid container */
  max-width: var(--layout-max-width);
  margin-left: auto; margin-right: auto;
  width: 100%;
  box-sizing: border-box;
  align-items: start; /* Align items to the top of their grid cells */
}

/* --- Left Sidebar Wrapper (Sticky) --- */
.side-nav-wrapper {
  grid-column: 1 / 2; /* Place in the first column */
  position: sticky; /* MAKE STICKY */
  /* Stick to the top edge relative to the grid container's padding-top */
  /* The 'top' value should account for the padding-top set by JS on the parent */
  /* NOTE: This simple 'top: 0' works because the parent grid container has padding-top */
  /* If the parent didn't have padding, we might need calc(var(--header-height) + var(--spacing-lg)) */
  top: 0;
  /* Set max-height relative to viewport below where the grid container's padding starts */
  max-height: calc(100vh - var(--header-height) - var(--spacing-lg));
  overflow-y: auto; /* Allow sidebar content to scroll if it overflows */
  overflow-x: hidden;
  box-sizing: border-box;
  /* Optionally hide scrollbar for left sidebar */
  /* scrollbar-width: none;
     -ms-overflow-style: none; */
}
/* .side-nav-wrapper::-webkit-scrollbar { display: none; } */


/* --- Main Content Area (Grid Cell) --- */
.main-content-area {
  grid-column: 2 / 3; /* Place in the second column */
  min-width: 0; /* Crucial for grid/flex items to prevent overflow */
  box-sizing: border-box;

  /* --- REMOVE explicit overflow and height --- */
  /* Let content determine height and allow it to overflow the container */
  /* The browser's main scrollbar will handle overflow if the page gets too long */
  overflow: visible; /* Explicitly allow content flow */
}

/* --- Inner Content Wrapper (Controls Max Width & Centering) --- */
.main-content-wrapper {
  /* Limits how wide the content can be, using variable from index.css */
  max-width: var(--main-content-max-width);
  margin-left: auto; /* Centers the block horizontally */
  margin-right: auto; /* Centers the block horizontally */
  width: 100%; /* Ensures it takes up available space *up to* max-width */
  /* Add vertical padding inside the constrained area */
  padding-top: var(--layout-padding-y);
  padding-bottom: var(--layout-padding-y);
  box-sizing: border-box;
  /* This wrapper itself shouldn't normally scroll; the parent .main-content-area grows with it */
}

/* --- Right Sidebar Wrapper (Sticky) --- */
.right-sidebar-wrapper {
  grid-column: 3 / 4; /* Place in the third column */
  position: sticky;
  top: 0; /* Stick to the top edge relative to the grid container's padding-top */
  /* Use max-height instead of height to allow internal scrolling */
  max-height: calc(100vh - var(--header-height) - var(--spacing-lg));
  box-sizing: border-box;

  /* --- Enable scrolling but hide the scrollbar --- */
  overflow-y: auto; /* Keep this to allow internal scrolling */
  overflow-x: hidden;

  /* For Firefox */
  scrollbar-width: none;
  /* For Internet Explorer and Edge (pre-Chromium) */
  -ms-overflow-style: none;
  /* --------------------------------------------- */
}

/* For Chrome, Safari, and newer Edge (Webkit-based) */
.right-sidebar-wrapper::-webkit-scrollbar {
  display: none; /* Hide the scrollbar */
}


/* --- Responsive Adjustments --- */

/* Tablet - Hide right sidebar, main content takes remaining space */
@media (min-width: 900px) and (max-width: 1199.95px) {
    .main-grid-container {
        /* Two columns: Left Sidebar | Main Content */
        grid-template-columns: var(--sidebar-left-width) minmax(0, 1fr);
        /* Ensure padding-top is still handled correctly by JS */
        /* Horizontal padding remains */
    }
    .right-sidebar-wrapper { display: none; } /* Hide right sidebar */
    /* .side-nav-wrapper { grid-column: 1 / 2; } */ /* Already correct */
    /* .main-content-area { grid-column: 2 / 3; } */ /* Already correct */
    /* Sidebars should still be sticky and have max-height */
}

/* Mobile - Stack layout, hide sidebars (handled by JS toggle potentially) */
@media (max-width: 899.95px) {
  .main-grid-container {
    display: block; /* Stack elements vertically */
    padding: 0 !important; /* Remove grid padding, override JS padding */
    max-width: none; /* Allow full width */
    width: 100%;
    gap: 0;
    height: auto; /* Height determined by content */
    overflow: visible; /* Allow content overflow */
  }
  /* Sidebars are hidden by default, potentially toggled by JS */
  .side-nav-wrapper { display: none; height: auto; position: static; max-height: none; } /* Reset sticky/height */
  .right-sidebar-wrapper { display: none; height: auto; position: static; max-height: none; } /* Reset sticky/height */

  .main-content-area {
     width: 100%;
     min-width: auto;
     height: auto; /* Height determined by content */
     overflow: visible; /* Allow content overflow */
     padding: 0; /* Remove cell padding */
  }
  /* Adjust wrapper for mobile view */
  .main-content-wrapper {
     max-width: none; /* Allow full width */
     margin-left: 0; margin-right: 0; /* Remove centering */
     /* Add padding, including space below fixed header */
     padding: var(--spacing-md);
     padding-top: calc(var(--header-height) + var(--spacing-md));
  }

}

/* --- Body class for mobile nav --- */
body.mobile-nav-active {
   overflow: hidden; /* Prevent scrolling background when mobile nav is open */
}

/* Add rule for when mobile nav IS displayed */
@media (max-width: 899.95px) {
    .side-nav-wrapper.mobile-nav-open { /* Assuming SideNav adds this class */
        display: block; /* Show it when open */
        position: fixed; /* Or absolute, depending on desired effect */
        left: 0;
        top: 0; /* Or below header: var(--header-height) */
        width: var(--sidebar-left-width); /* Or a mobile-specific width */
        height: 100vh; /* Or calc(100vh - var(--header-height)) */
        background-color: var(--color-bg-secondary); /* Or appropriate background */
        z-index: 1000; /* Ensure it's above other content */
        overflow-y: auto; /* Allow scrolling */
        max-height: none; /* Override desktop max-height */
         /* Add transitions, etc. as needed */
    }
}