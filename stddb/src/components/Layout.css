/* src/components/Layout.css */

.app-layout-wrapper {
  position: relative;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

/* --- Main Grid Container --- */
.main-grid-container {
  display: grid;
  grid-template-columns: var(--sidebar-left-width) 1fr var(--sidebar-right-width);
  gap: var(--layout-gap);

  /* Use margin-top for space below sticky header */
  margin-top: var(--layout-gap); /* Pushes the grid down */
  /* Apply only Left/Right/Bottom padding to the grid container itself */
  padding: 0 var(--layout-padding-x) var(--spacing-md); /* Top=0, L/R=var, Bot=var */

  max-width: var(--layout-max-width);
  margin-left: auto; /* Horizontal centering */
  margin-right: auto; /* Horizontal centering */
  width: 100%;
  box-sizing: border-box;
  align-items: start; /* Align grid items to the top */
  flex-grow: 1; /* Allow grid to fill vertical space */
}

/* --- Main Content Area (Middle Column) --- */
/* Styles for the <main> element rendered by Layout.js */
.main-content-area {
  min-width: 0; /* Prevent grid blowout from wide content */
  /* No fixed height or internal overflow - Body handles scrolling */

  /* --- Padding Removed --- */
  padding: 0; /* <<< Padding removed as requested >>> */
  /* Content inside (like pages) will need its own padding */

  /* Add margin at the bottom to ensure space below content before page end */
  margin-bottom: var(--layout-gap);
}


/* --- Sidebar Wrappers --- */
/* These elements in Layout.js just define the grid columns */
.left-sidebar-wrapper,
.right-sidebar-wrapper {
   /* Typically no styles needed here */
}

/* --- Mobile Navigation Overlay --- */
/* Dark overlay shown when mobile nav is open */
.mobile-nav-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 1199; /* Below mobile nav (1200), above content */
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
  display: none; /* Hidden by default */
}

/* --- Responsive Adjustments --- */

/* Tablet: Hide right sidebar */
@media (max-width: 992px) {
  .main-grid-container {
    grid-template-columns: var(--sidebar-left-width) 1fr; /* Switch to 2 columns */
    /* Desktop margin-top and padding rules still apply unless overridden */
    /* Example: Adjust side padding if needed */
    /* padding-left: var(--spacing-md); */
    /* padding-right: var(--spacing-md); */
  }
  /* .main-content-area padding remains 0 */
}

/* Mobile: Single column, different spacing */
@media (max-width: 768px) {
  .main-grid-container {
    grid-template-columns: 1fr; /* Single column */
    gap: 0; /* No gap needed */
    /* Adjust mobile margin/padding for the grid container */
    margin-top: var(--spacing-md); /* Less space below header */
    padding: 0 var(--spacing-md) var(--spacing-md); /* T=0, L/R=sp-md, B=sp-md */
  }

   /* Main content area padding remains 0 on mobile */
   .main-content-area {
      padding: 0; /* Confirm padding is 0 */
      margin-bottom: var(--spacing-md); /* Adjust bottom margin */
   }

   /* Show overlay when mobile nav is active */
   /* Uses :has pseudo-class for cleaner targeting */
  .app-layout-wrapper:has(.side-nav.mobile-visible) > .mobile-nav-overlay {
     display: block; /* Allow transition */
     opacity: 1;
     visibility: visible;
  }
}